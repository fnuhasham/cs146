
class TreeNode:
  def __init__(self, val=0, left=None, right=None):
      self.val = val
      self.left = left
      self.right = right

def lowest_common_ancestor(root, p, q):
  if root is None:
      return None
  if root.val == p.val or root.val == q.val:
      return root

  left = lowest_common_ancestor(root.left, p, q)
  right = lowest_common_ancestor(root.right, p, q)

  if root.left is None:
      return right
  if root.right is None:
      return left

  return root

if __name__ == "__main__":
  root = TreeNode(4)
  root.left = TreeNode(3)
  root.right = TreeNode(8)
  root.left.left = TreeNode(1)
  root.right.left = TreeNode(5)
  root.right.right = TreeNode(9)

  p = TreeNode(3)
  q = TreeNode(8)
  lca = lowest_common_ancestor(root, p, q)
  print("Lowest Common Ancestor:", lca.val)
