
class TreeNode:
  def __init__(self, val=0, left=None, right=None):
      self.val = val
      self.left = left
      self.right = right

class Solution:
  def isValidBST(self, root, lower=float('-inf'), upper=float('inf')):
      if not root:
          return True

      if root.val <= lower or root.val >= upper:
          return False

      return self.isValidBST(root.left, lower, root.val) and self.isValidBST(root.right, root.val, upper)

if __name__ == "__main__":
  solution = Solution()

  root = TreeNode(4)
  root.left = TreeNode(3)
  root.left.left = TreeNode(1)

  root.right = TreeNode(8)
  root.right.right = TreeNode(9)
  root.right.left = TreeNode(5)

  root2 = TreeNode(1)
  root2.left = TreeNode(2)
  root2.left.left = TreeNode(3)
  root2.left.right = TreeNode(4)

  root2.right = TreeNode(8)
  root2.right.right = TreeNode(6)
  root2.right.left = TreeNode(5)

  if solution.isValidBST(root):
      print("This is a valid binary")
  else:
      print("This is an invalid binary")

  if solution.isValidBST(root2):
      print("This is a valid binary")
  else:
      print("This is an invalid binary")
