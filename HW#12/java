import java.util.*;

public class WaterSupplyCos {
    public static void main(String[] args) {
        int n = 3;
        int[] wells = {1, 2, 2};
        int[][] pipes = {{1, 2, 1}, {2, 3, 1}};

        Solution solution = new Solution();
        int minCost = solution.minCostToSupplyWater(n, wells, pipes);

        System.out.println("Minimum total cost to supply water to all houses: " + minCost);
    }
}

class Solution {
    public int minCostToSupplyWater(int n, int[] wells, int[][] pipes) {
        List<int[]> allPipes = new ArrayList<>();
        for (int[] pipe : pipes) {
            allPipes.add(pipe);
        }
        for (int i = 0; i < wells.length; i++) {
            allPipes.add(new int[]{0, i + 1, wells[i]});
        }

        // Sort the pipes based on their costs
        Collections.sort(allPipes, (a, b) -> Integer.compare(a[2], b[2]));

        int[] parent = new int[n + 1];
        Arrays.fill(parent, -1);

        int totalCost = 0;
        for (int[] pipe : allPipes) {
            int house1 = pipe[0], house2 = pipe[1], cost = pipe[2];
            int parent1 = find(parent, house1);
            int parent2 = find(parent, house2);
            if (parent1 != parent2) {
                parent[parent1] = parent2;
                totalCost += cost;
            }
        }

        return totalCost;
    }

    private int find(int[] parent, int x) {
        if (parent[x] == -1) return x;
        return parent[x] = find(parent, parent[x]);
    }
}
