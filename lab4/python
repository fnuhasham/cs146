class TreeNode:
  def __init__(self, val=0, left=None, right=None):
      self.val = val
      self.left = left
      self.right = right

def invertTree(root):
  if root is None:
      return None

  left = invertTree(root.left)
  right = invertTree(root.right)

  # Swaps
  root.left = right
  root.right = left

  return root

def inorderTraversal(root):
  if root is None:
      return
  inorderTraversal(root.left)
  print(root.val, end=" ")
  inorderTraversal(root.right)

# Create a binary tree
root = TreeNode(1)
root.left = TreeNode(2)
root.right = TreeNode(8)
root.left.left = TreeNode(3)
root.left.right = TreeNode(4)
root.right.left = TreeNode(5)
root.right.right = TreeNode(6)

# Invert the binary tree
root = invertTree(root)

# Output the inverted binary tree
inorderTraversal(root)
